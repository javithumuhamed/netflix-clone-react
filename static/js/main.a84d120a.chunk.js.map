{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","netflix-logo.png","Nav.js","Down.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","islargeRow","useState","trailerUrl","settrailerUrl","movies","setmovies","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","console","log","original_title","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","style","borderRadius","src","poster_path","backdrop_path","alt","name","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchTopRated","fetchNeflixOriginals","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","logo","Down","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a84d120a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst instance =axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nconst base_url = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({ title, fetchUrl, islargeRow }) {\r\n  const [trailerUrl, settrailerUrl] = useState(\"\");\r\n  const [movies, setmovies] = useState([\"\"]);\r\n\r\n  //a code that runs based on a funcions/variables\r\n  useEffect(() => {\r\n    //if [] , run once when the this function row loads but it doesnt self refresh\r\n\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setmovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    console.log(movie.original_title);\r\n    if (trailerUrl) {\r\n      settrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.original_title || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          settrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        {/*title*/}\r\n        <h2>{title} </h2>\r\n        <div className=\"row_posters\">\r\n          {movies.map((movie) => (\r\n            <img\r\n              onClick={() => handleClick(movie)}\r\n              style={{\r\n                borderRadius: \"5px\",\r\n              }}\r\n              key={movie.id}\r\n              className={`row_poster ${islargeRow && \"rowposter_large\"}`}\r\n              src={`${base_url}${\r\n                islargeRow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              alt={movie.name}\r\n            />\r\n          ))}\r\n          {/*container -> posters */}\r\n        </div>\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY =\"a45c4e6dbd888d44b0893cb43f0855b3\";\r\n const requests ={\r\n    fetchTrending:         `/trending/all/week?api_key=${API_KEY}&language=en-US`, \r\n    fetchTopRated :        `/movie/top_rated?api_key=${API_KEY}&language=en`,\r\n    fetchNeflixOriginals: `/discover/movie?api_key=${API_KEY}&with_genres=213`,\r\n    fetchActionMovies:    `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:    `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:    `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:   `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:   `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    \r\n}\r\nexport default requests;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./request\";\r\nimport \"./banner.css\";\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchTrending);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\r\n                \"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\"\r\n            )`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_contents\">\r\n        <h1 className=\"banner_title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner_desc\">\r\n          {movie?.overview}\r\n          {truncate(movie?.overview, 100)}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","export default __webpack_public_path__ + \"static/media/netflix-logo.23df4ca3.png\";","import React, { useEffect, useState } from \"react\";\r\nimport logo from \"./netflix-logo.png\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 500) {\r\n        //handles off\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <img className=\"netflix-logo\" src={logo} alt=\"logo\" />\r\n      <button className=\"netflix-button\">Sign in</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./down.css\";\r\n\r\nfunction Down() {\r\n  return (\r\n    <div>\r\n      <h2>Powered By Mohamed Javith</h2>\r\n    </div>\r\n  );\r\n}\r\nexport default Down;\r\n","import \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./request\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\nimport Down from \"./Down\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} islargeRow />\n      <Row title=\"Top rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Down />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}